services:
  db:
    image: mariadb:10.6
    networks:
      - frappe_network
    restart: on-failure
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "--password=admin"]
      interval: 5s
      retries: 20
    command:
      - --character-set-server=utf8mb4
      - --collation-server=utf8mb4_unicode_ci
      - --skip-character-set-client-handshake
      - --skip-innodb-read-only-compressed
    environment:
      MYSQL_ROOT_PASSWORD: admin
      MARIADB_ROOT_PASSWORD: admin
    volumes:
      - db-data:/var/lib/mysql

  redis-queue:
    image: redis:6.2-alpine
    networks:
      - frappe_network
    restart: on-failure
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      retries: 10
    volumes:
      - redis-queue-data:/data

  redis-cache:
    image: redis:6.2-alpine
    networks:
      - frappe_network
    restart: on-failure
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      retries: 10

  backend:
    image: frappe/erpnext:v15.72.3
    networks:
      - frappe_network
    restart: on-failure
    depends_on:
      db:
        condition: service_healthy
      redis-cache:
        condition: service_healthy
      redis-queue:
        condition: service_healthy
    volumes:
      - sites:/home/frappe/frappe-bench/sites
      - logs:/home/frappe/frappe-bench/logs
      - apps:/home/frappe/frappe-bench/apps
    environment:
      DB_HOST: db
      DB_PORT: "3306"
      MYSQL_ROOT_PASSWORD: admin
      MARIADB_ROOT_PASSWORD: admin
    healthcheck:
      test: ["CMD", "curl", "-f", "http://127.0.0.1:8000/api/method/ping"]
      interval: 3s # check every 3 seconds
      timeout: 3s # fail after 3 seconds
      retries: 10 # up to 30s max wait
      start_period: 20s # initial grace period

  configurator:
    image: frappe/erpnext:v15.72.3
    networks:
      - frappe_network
    restart: "no"
    depends_on:
      backend:
        condition: service_healthy
    entrypoint:
      - bash
      - -c
    command:
      - >
        echo "Waiting for backend to be fully ready...";
        sleep 10;
        wait-for-it -t 120 backend:8000;
        until curl -sf http://backend:8000/api/method/ping; do
          echo "Waiting for backend /api/method/ping...";
          sleep 5;
        done;
        echo "Backend is fully ready!";
        bench get-app --branch version-15 hrms https://github.com/frappe/hrms.git;
        ls -1 apps > sites/apps.txt;
        bench set-config -g db_host $$DB_HOST;
        bench set-config -gp db_port $$DB_PORT;
        bench set-config -g redis_cache "redis://$$REDIS_CACHE";
        bench set-config -g redis_queue "redis://$$REDIS_QUEUE";
        bench set-config -g redis_socketio "redis://$$REDIS_QUEUE";
        bench set-config -gp socketio_port $$SOCKETIO_PORT;
    environment:
      DB_HOST: db
      DB_PORT: "3306"
      REDIS_CACHE: redis-cache:6379
      REDIS_QUEUE: redis-queue:6379
      SOCKETIO_PORT: "9000"
    volumes:
      - sites:/home/frappe/frappe-bench/sites
      - logs:/home/frappe/frappe-bench/logs
      - apps:/home/frappe/frappe-bench/apps

  create-site:
    image: frappe/erpnext:v15.72.3
    networks:
      - frappe_network
    restart: "no"
    depends_on:
      configurator:
        condition: service_completed_successfully
    entrypoint:
      - bash
      - -c
    command:
      - >
        wait-for-it -t 120 db:3306;
        wait-for-it -t 120 redis-cache:6379;
        wait-for-it -t 120 redis-queue:6379;
        wait-for-it -t 180 backend:8000;
        echo "Checking common_site_config.json...";
        export start=`date +%s`;
        until [[ -n `grep -hs ^ sites/common_site_config.json | jq -r ".db_host // empty"` ]] && \
          [[ -n `grep -hs ^ sites/common_site_config.json | jq -r ".redis_cache // empty"` ]] && \
          [[ -n `grep -hs ^ sites/common_site_config.json | jq -r ".redis_queue // empty"` ]];
        do
          echo "Waiting for sites/common_site_config.json to be created";
          sleep 5;
          if (( `date +%s`-start > 180 )); then
            echo "could not find sites/common_site_config.json with required keys";
            exit 1;
          fi
        done;
        echo "sites/common_site_config.json found";
        bench new-site --mariadb-user-host-login-scope='%' \
          --admin-password=admin \
          --db-root-username=root \
          --db-root-password=admin \
          --install-app erpnext \
          --install-app hrms \
          --set-default erpnextlab.itretina.com
    volumes:
      - sites:/home/frappe/frappe-bench/sites
      - logs:/home/frappe/frappe-bench/logs
      - apps:/home/frappe/frappe-bench/apps

  websocket:
    image: frappe/erpnext:v15.72.3
    networks:
      - frappe_network
    restart: on-failure
    depends_on:
      backend:
        condition: service_healthy
    command:
      - node
      - /home/frappe/frappe-bench/apps/frappe/socketio.js
    volumes:
      - sites:/home/frappe/frappe-bench/sites
      - logs:/home/frappe/frappe-bench/logs
      - apps:/home/frappe/frappe-bench/apps

  frontend:
    image: frappe/erpnext:v15.72.3
    networks:
      - frappe_network
    restart: on-failure
    depends_on:
      websocket:
        condition: service_started
    command:
      - nginx-entrypoint.sh
    environment:
      BACKEND: backend:8000
      FRAPPE_SITE_NAME_HEADER: erpnextlab.itretina.com
      SOCKETIO: websocket:9000
      UPSTREAM_REAL_IP_ADDRESS: 127.0.0.1
      UPSTREAM_REAL_IP_HEADER: X-Forwarded-For
      UPSTREAM_REAL_IP_RECURSIVE: "off"
      PROXY_READ_TIMEOUT: 120
      CLIENT_MAX_BODY_SIZE: 50m
    ports:
      - "8080:8080"
    volumes:
      - sites:/home/frappe/frappe-bench/sites
      - logs:/home/frappe/frappe-bench/logs
      - apps:/home/frappe/frappe-bench/apps

  queue-long:
    image: frappe/erpnext:v15.72.3
    networks:
      - frappe_network
    restart: on-failure
    depends_on:
      backend:
        condition: service_healthy
    command: ["bench", "worker", "--queue", "long,default,short"]
    volumes:
      - sites:/home/frappe/frappe-bench/sites
      - logs:/home/frappe/frappe-bench/logs
      - apps:/home/frappe/frappe-bench/apps

  queue-short:
    image: frappe/erpnext:v15.72.3
    networks:
      - frappe_network
    restart: on-failure
    depends_on:
      backend:
        condition: service_healthy
    command: ["bench", "worker", "--queue", "short,default"]
    volumes:
      - sites:/home/frappe/frappe-bench/sites
      - logs:/home/frappe/frappe-bench/logs
      - apps:/home/frappe/frappe-bench/apps

  scheduler:
    image: frappe/erpnext:v15.72.3
    networks:
      - frappe_network
    restart: on-failure
    depends_on:
      backend:
        condition: service_healthy
    command: ["bench", "schedule"]
    volumes:
      - sites:/home/frappe/frappe-bench/sites
      - logs:/home/frappe/frappe-bench/logs
      - apps:/home/frappe/frappe-bench/apps

volumes:
  db-data:
  redis-queue-data:
  sites:
  logs:
  apps:

networks:
  frappe_network:
    driver: bridge
